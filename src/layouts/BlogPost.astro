---
import BaseLayout from './BaseLayout.astro';
import PostDate from '../components/PostDate.astro';
import PostTags from '../components/PostTags.astro';
import { Picture } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import type { ImageMetadata } from 'astro';

interface Props {
  post: CollectionEntry<'blog'>
}

const { post } = Astro.props;
const { title, date, tags, image, photographerName, photographerLink } = post.data;

const utm_source = 'M-Zen';
const utm_medium = 'referral';

const SIZES = '(max-width: 768px) 100vw, 1080px';
const WIDTHS = [480, 768, 1080] as const;

let isRemote = false;
let localMeta: ImageMetadata | null = null;
let remoteSrc: string | null = null;

if (image) {
  isRemote = typeof image === 'string' && image.startsWith('http');

  if (isRemote) {
    remoteSrc = image;
  } else {
    // 跟 BlogPreview 一樣，統一用 /src/assets 絕對路徑
    const allImages = import.meta.glob('/src/assets/*.{jpg,jpeg,png,webp}', { eager: true, import: 'default' });
    const localSrc = allImages[`/src/assets/${image}`];

    if (localSrc) {
      localMeta = localSrc as ImageMetadata;
    } else {
      console.warn(`找不到本地圖片: /src/assets/${image}`);
    }
  }
}

const showImage = Boolean(localMeta || remoteSrc);
const showCredit = Boolean(isRemote && photographerName && photographerLink);
const linkHref = showImage && isRemote && remoteSrc
  ? `${remoteSrc}?utm_source=${utm_source}&utm_medium=${utm_medium}`
  : undefined;
---

<BaseLayout title={title}>
  <article class="max-w-3xl mx-auto px-4">
    {showImage && (
      isRemote ? (
        <a href={linkHref} target="_blank" rel="noopener noreferrer" class="block mb-2">
          <div class="w-full aspect-[21/9] rounded-xl overflow-hidden shadow-lg">
            {remoteSrc && (
              <img
                src={remoteSrc}
                alt={title}
                class="w-full h-full object-cover"
                loading="eager"
              />
            )}
          </div>
        </a>
      ) : (
        <div class="w-full aspect-[21/9] rounded-xl overflow-hidden shadow-lg mb-2">
          {localMeta && (
            <Picture
              src={localMeta}
              widths={WIDTHS as unknown as number[]}
              formats={['webp', 'jpeg']}
              sizes={SIZES}
              fit="cover"
              position="center"
              alt={title}
              loading="eager"
              class="w-full h-full object-cover"
            />
          )}
        </div>
      )
    )}

    {showCredit && (
      <p class="text-sm text-gray-500 mb-8">
        Photo by{' '}
        <a href={`${photographerLink}?utm_source=${utm_source}&utm_medium=${utm_medium}`} target="_blank" rel="noopener noreferrer" class="underline hover:text-primary-600">
          {photographerName}
        </a>{' '}
        on{' '}
        <a href={`https://unsplash.com/?utm_source=${utm_source}&utm_medium=${utm_medium}`} target="_blank" rel="noopener noreferrer" class="underline hover:text-primary-600">
          Unsplash
        </a>
      </p>
    )}

    <header class="mb-12">
      <h1 class="text-4xl md:text-5xl font-bold mb-4 text-gray-900 dark:text-gray-100">{title}</h1>
      <div class="mb-6">
        <PostDate date={date} />
      </div>
      {tags && <PostTags tags={tags} />}
    </header>

    <div class="prose prose-lg dark:prose-invert prose-headings:text-gray-900 dark:prose-headings:text-gray-100 prose-p:text-gray-700 dark:prose-p:text-gray-300 prose-a:text-primary-600 dark:prose-a:text-primary-400 hover:prose-a:text-primary-500 dark:hover:prose-a:text-primary-300 prose-strong:text-gray-900 dark:prose-strong:text-gray-100 prose-code:text-gray-300 dark:prose-code:text-gray-400 prose-blockquote:text-gray-700 dark:prose-blockquote:text-gray-300 prose-span:text-gray-700 dark:prose-span:text-gray-300 prose-li:text-gray-700 dark:prose-li:text-gray-300 max-w-none">
      <slot />
    </div>
  </article>
</BaseLayout>
