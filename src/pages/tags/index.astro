---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { getAllTags, getPostsByTag } from '../../utils/posts';

const posts = await getCollection('blog');
const tags = getAllTags(posts);
const tagCounts = tags.map(tag => ({
  name: tag,
  count: getPostsByTag(posts, tag).length
})).sort((a, b) => b.count - a.count);

const maxCount = Math.max(...tagCounts.map(t => t.count));
const minCount = Math.min(...tagCounts.map(t => t.count));

function getFontSize(count) {
  const minFont = 14;
  const maxFont = 30;
  if (maxCount === minCount) return `${minFont}px`;
  const size = minFont + ((count - minCount) / (maxCount - minCount)) * (maxFont - minFont);
  return `${size}px`;
}

function getColorLightness(count) {
  // 輕微調整色彩飽和度，值介於40%~90%
  if (maxCount === minCount) return 70;
  return 90 - ((count - minCount) / (maxCount - minCount)) * 50;
}
---

<BaseLayout title="M-Zen / Tags">
  <h1 class="text-4xl font-bold mb-8 text-gray-900 dark:text-white">Tags | 凝聚焦點</h1>
  <p class="text-xl mb-8 text-gray-600 dark:text-gray-300">從漸漸累積的想法去挖掘、去剖析，找到生活的槓桿，舉起自由富足的人生。</p>
  <div class="flex flex-wrap gap-4">
    {tagCounts.map(({ name, count }) => (
      <a
        href={`/tags/${name}`}
        class="rounded-lg transition-colors"
        style={`font-size: ${getFontSize(count)}; color: hsl(240, 100%, ${getColorLightness(count)}%)`}
        title={`${count} posts`}
      >
        #{name}
      </a>
    ))}
  </div>
</BaseLayout>
